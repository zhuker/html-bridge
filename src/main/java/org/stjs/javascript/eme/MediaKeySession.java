package org.stjs.javascript.eme;

import org.stjs.javascript.Promise;
import org.stjs.javascript.annotation.STJSBridge;
import org.stjs.javascript.dom.EventTarget;
import org.stjs.javascript.functions.Callback1;
import org.stjs.javascript.typed.ArrayBufferView;
import org.stjs.javascript.typed.Uint8Array;

@STJSBridge
public abstract class MediaKeySession implements EventTarget {
    /**
     * MediaKeySession.closed Read only
     * Returns a Promise signaling when a @MediaKeySession closes.
     * This promise can only be fulfilled and is never rejected.
     * Closing a session means that licenses and keys associated with it are no longer valid for decrypting media data.
     */
    public native Promise closed();

    /**
     * MediaKeySession.expiration Read only
     * The time after which the keys in the current session can no longer be used to decrypt media data, or NaN if no such time exists. This value is determined by the CDM and measured in milliseconds since January 1, 1970, UTC. This value may change during a session lifetime, such as when an action triggers the start of a window.
     */
    public long expiration;

    /**
     * MediaKeySession.keyStatuses Read only
     * Contains a reference to a read-only MediaKeyStatusMap of the current session's keys and their statuses.
     */
    public MediaKeyStatusMap keyStatuses;

    /**
     * MediaKeySession.sessionId Read only
     * Contains a unique string generated by the CDM for the current media object and its associated keys or licenses.
     * Event handlers
     */
    public String sessionId;

    /**
     * MediaKeySession.onkeystatuseschange
     * Sets the EventHandler called when there has been a change in the keys in a session or their statuses.
     */
    public Callback1 onkeystatuseschange;

    /**
     * MediaKeySession.onmessage
     * Sets the EventHandler called when the content decryption module has generated a message for the session.
     */
    public Callback1 onmessage;

    /**
     * MediaKeySession.close()
     * Returns a Promise after notifying the current media session is no longer needed and that the CDM should release any resources associated with this object and close it.
     */
    public native Promise close();

    /**
     * MediaKeySession.generateRequest()
     * Returns a Promise after generating a media request based on initialization data.
     *
     * @param webm
     * @param KEY
     */
    public native Promise generateRequest(String webm, ArrayBufferView KEY);

    /**
     * MediaKeySession.load()
     * Returns a Promise that resolves to a boolean value after loading data for a specified session object.
     */
    public native Promise load();

    /**
     * MediaKeySession.remove()
     * Returns a Promise after removing any session data associated with the current object.
     */
    public native Promise remove();

    /**
     * MediaKeySession.update()
     * Returns a Promise after loading messages and licenses to the CDM.
     *
     * @param license
     */
    public native Promise update(Uint8Array license);
}
